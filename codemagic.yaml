workflows:

  # Base Workflow for all environments
  base-workflow:
    name: Base Flutter Workflow
    # Maximum duration allowed for the build (in minutes)
    max_build_duration: 120
    # Type of instance to be used for the build
    instance_type: mac_mini_m1
    environment:
      # Using the stable version of Flutter
      flutter: stable
    scripts:
      # Step to install dependencies required for the Flutter project
      - name: Install dependencies
        script: |
          flutter pub get

      # Step to analyze the code for any linting issues
      - name: Analyze code for issues (Lint)
        script: |
          flutter analyze
          if [ $? -ne 0 ]; then
            echo "Flutter analyze found issues. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to run unit tests and validate the code
      - name: Run tests
        script: |
          flutter test
          if [ $? -ne 0 ]; then
            echo "Some tests failed. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to check if there are any outdated dependencies
      - name: Check for outdated dependencies
        script: |
          outdated=$(flutter pub outdated --json)
          if [ $? -ne 0 ]; then
            echo "Dependencies are outdated. Please update your dependencies by running 'flutter pub upgrade'."
            echo "$outdated"
            exit 1
          fi

    cache:
      # Caching paths for Flutter SDK and other dependencies to speed up future builds
      cache_paths:
        - ~/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
        - $CM_BUILD_DIR/node_modules
        - ios/Pods
        - ios/.symlinks
        - ios/Flutter/Flutter.framework
        - ios/Flutter/Flutter.podspec

  # Workflow for building and signing the app for production release.
  production-workflow:
    name: Production Release
    # Maximum duration allowed for the build (in minutes)
    max_build_duration: 120
    # Type of instance to be used for the build
    instance_type: mac_mini_m1
    environment:
      # Using the stable version of Flutter
      flutter: stable
      vars:
        # Define the version of the app and the build number
        APP_VERSION: 1.0.0
        BUILD_NUMBER: 1
      # Uncomment and configure signing credentials if needed for Android and iOS
      # android_signing:
      #   key_alias: $SIGNING_KEY_ALIAS
      #   key_password: $SIGNING_KEY_PASSWORD
      #   keystore_path: $SIGNING_KEYSTORE_PATH
      #   keystore_password: $SIGNING_KEYSTORE_PASSWORD
      # ios_signing:
      #   provisioning_profiles:
      #     ios_app: $PROVISIONING_PROFILE
      #   code_signing_identity: $CODE_SIGNING_IDENTITY
    scripts:
      # Step to install dependencies required for the Flutter project
      - name: Install dependencies
        script: |
          flutter pub get

      # Step to analyze the code for any linting issues
      - name: Analyze code for issues (Lint)
        script: |
          flutter analyze
          if [ $? -ne 0 ]; then
            echo "Flutter analyze found issues. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to run unit tests and validate the code
      - name: Run tests
        script: |
          flutter test
          if [ $? -ne 0 ]; then
            echo "Some tests failed. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to check if there are any outdated dependencies
      - name: Check for outdated dependencies
        script: |
          outdated=$(flutter pub outdated --json)
          if [ $? -ne 0 ]; then
            echo "Dependencies are outdated. Please update your dependencies by running 'flutter pub upgrade'."
            echo "$outdated"
            exit 1
          fi

      # Step to build the APK for Android in release mode for production
      - name: Build APK (Android)
        script: |
          flutter build apk --release --flavor production
          if [ $? -ne 0 ]; then
            echo "APK build failed. Please check the logs above."
            exit 1
          fi

  #    - name: Build IPA (iOS)
  #      script: |
  #        pod install --project-directory=ios
  #        flutter build ios --release --flavor production
  #        if [ $? -ne 0 ]; then
  #          echo "iOS build failed. Please check the logs above."
  #          exit 1
  #        fi

    cache:
      # Caching paths for Flutter SDK and other dependencies to speed up future builds
      cache_paths:
        - ~/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
        - $CM_BUILD_DIR/node_modules
        - ios/Pods
        - ios/.symlinks
        - ios/Flutter/Flutter.framework
        - ios/Flutter/Flutter.podspec

  # Workflow for building and testing the app in a QA environment.
  qa-workflow:
    name: QA Build
    # Maximum duration allowed for the build (in minutes)
    max_build_duration: 120
    # Type of instance to be used for the build
    instance_type: mac_mini_m1
    environment:
      # Using the stable version of Flutter
      flutter: stable
      vars:
        # Define the version of the app and the build number specific to QA
        APP_VERSION: 1.0.0-qa
        BUILD_NUMBER: 1
      # Uncomment and configure signing credentials if needed for Android and iOS
      # android_signing:
      #   key_alias: $SIGNING_KEY_ALIAS
      #   key_password: $SIGNING_KEY_PASSWORD
      #   keystore_path: $SIGNING_KEYSTORE_PATH
      #   keystore_password: $SIGNING_KEYSTORE_PASSWORD
      # ios_signing:
      #   provisioning_profiles:
      #     ios_app: $PROVISIONING_PROFILE
      #   code_signing_identity: $CODE_SIGNING_IDENTITY
    scripts:
      # Step to install dependencies required for the Flutter project
      - name: Install dependencies
        script: |
          flutter pub get

      # Step to analyze the code for any linting issues
      - name: Analyze code for issues (Lint)
        script: |
          flutter analyze
          if [ $? -ne 0 ]; then
            echo "Flutter analyze found issues. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to run unit tests and validate the code
      - name: Run tests
        script: |
          flutter test
          if [ $? -ne 0 ]; then
            echo "Some tests failed. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to check if there are any outdated dependencies
      - name: Check for outdated dependencies
        script: |
          outdated=$(flutter pub outdated --json)
          if [ $? -ne 0 ]; then
            echo "Dependencies are outdated. Please update your dependencies by running 'flutter pub upgrade'."
            echo "$outdated"
            exit 1
          fi

      # Step to build the APK for Android in release mode for QA
      - name: Build APK (Android)
        script: |
          flutter build apk --release --flavor qa
          if [ $? -ne 0 ]; then
            echo "APK build failed. Please check the logs above."
            exit 1
          fi

      # Step to build the IPA for iOS in release mode for QA
      - name: Build IPA (iOS)
        script: |
          pod install --project-directory=ios
          flutter build ios --release --flavor qa
          if [ $? -ne 0 ]; then
            echo "iOS build failed. Please check the logs above."
            exit 1
          fi

    cache:
      # Caching paths for Flutter SDK and other dependencies to speed up future builds
      cache_paths:
        - ~/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
        - $CM_BUILD_DIR/node_modules
        - ios/Pods
        - ios/.symlinks
        - ios/Flutter/Flutter.framework
        - ios/Flutter/Flutter.podspec

  # Workflow for development builds, typically used for internal testing and debugging.
  develop-workflow:
    name: Develop Build
    # Maximum duration allowed for the build (in minutes)
    max_build_duration: 120
    # Type of instance to be used for the build
    instance_type: mac_mini_m1
    environment:
      # Using the stable version of Flutter
      flutter: stable
      vars:
        # Define the version of the app and the build number specific to development
        APP_VERSION: 1.0.0-dev
        BUILD_NUMBER: 1
    scripts:
      # Step to install dependencies required for the Flutter project
      - name: Install dependencies
        script: |
          flutter pub get

      # Step to analyze the code for any linting issues
      - name: Analyze code for issues (Lint)
        script: |
          flutter analyze
          if [ $? -ne 0 ]; then
            echo "Flutter analyze found issues. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to run unit tests and validate the code
      - name: Run tests
        script: |
          flutter test
          if [ $? -ne 0 ]; then
            echo "Some tests failed. Please fix the above issues and commit the changes."
            exit 1
          fi

      # Step to check if there are any outdated dependencies
      - name: Check for outdated dependencies
        script: |
          outdated=$(flutter pub outdated --json)
          if [ $? -ne 0 ]; then
            echo "Dependencies are outdated. Please update your dependencies by running 'flutter pub upgrade'."
            echo "$outdated"
            exit 1
          fi

      # Step to build the APK for Android in release mode for development
      - name: Build APK (Android)
        script: |
          flutter build apk --release --flavor develop
          if [ $? -ne 0 ]; then
            echo "APK build failed. Please check the logs above."
            exit 1
          fi

      # Step to build the IPA for iOS in release mode for development
     # - name: Build IPA (iOS)
     #   script: |
     #     pod install --project-directory=ios
     #     flutter build ios --release --flavor develop
     #     if [ $? -ne 0 ]; then
     #       echo "iOS build failed. Please check the logs above."
     #       exit 1
     #     fi

    cache:
      # Caching paths for Flutter SDK and other dependencies to speed up future builds
      cache_paths:
        - ~/.pub-cache
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
        - $CM_BUILD_DIR/node_modules
    #    - ios/Pods
    #    - ios/.symlinks
    #    - ios/Flutter/Flutter.framework
    #    - ios/Flutter/Flutter.podspec
